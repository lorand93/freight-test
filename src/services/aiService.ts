import { AIMessageRequest, AIMessageResponse } from '../types';
import { getOpenAIConfig } from '../config';

/**
 * AI Service for OpenAI API integration
 * Generates friendly, personalized delay messages for customers
 */

export class AIService {
  private apiKey: string;
  private model: string;

  constructor() {
    const config = getOpenAIConfig();
    this.apiKey = config.apiKey;
    this.model = config.model;
  }

  /**
   * Generates a friendly delay message using OpenAI's GPT-4o-mini model
   * @param request - The AI message request with delay information
   * @returns Promise<AIMessageResponse> - Generated message response
   */
  async generateDelayMessage(request: AIMessageRequest): Promise<AIMessageResponse> {
    try {
      console.log(`Generating AI message for ${request.delayMinutes} minute delay`);
      const prompt = this.buildPrompt(request);
      const mockResponse = await this.getAiResponse(request, prompt);
      console.log('AI response received:', mockResponse.message);
      return mockResponse
    } catch (error) {
      console.error('Error generating AI message:', error);
      console.log('Using fallback message');
      const fallbackMessage = this.getFallbackMessage(request);

      return {
        message: fallbackMessage,
        success: false,
        error: error instanceof Error ? error.message : 'AI service unavailable',
      };
    }
  }

  /**
   * Builds the prompt for OpenAI API
   * @param request - The AI message request
   * @returns string - The formatted prompt
   */
  private buildPrompt(request: AIMessageRequest): string {
    const { delayMinutes, route, trafficCondition } = request;

    return `You are a friendly customer service assistant for a freight delivery company. 
    
    Generate a courteous and professional message to inform a customer about a delivery delay.
    
    Details:
    - Delivery route: ${route.origin} to ${route.destination}
    - Estimated delay: ${delayMinutes} minutes
    - Traffic condition: ${trafficCondition}
    
    Requirements:
    - Be empathetic and apologetic
    - Explain the reason for the delay (traffic conditions)
    - Provide the estimated delay time
    - Offer reassurance about delivery
    - Keep the tone professional but friendly
    - Keep the message concise (under 150 words)
    
    Generate only the message content, no additional text.`;
  }

  /**
   * Provides a fallback message when AI service is unavailable
   * @param request - The AI message request
   * @returns string - Fallback message
   */
  private getFallbackMessage(request: AIMessageRequest): string {
    const { delayMinutes, route } = request;

    return `Dear Customer,

We want to inform you that your freight delivery from ${route.origin} to ${route.destination} is experiencing a delay of approximately ${delayMinutes} minutes due to current traffic conditions.

We apologize for any inconvenience this may cause and appreciate your patience. Our team is working to ensure your delivery arrives as soon as possible.

Thank you for your understanding.

Best regards,
Freight Delivery Team`;
  }

  /**
   * Demonstrates how to integrate with OpenAI API
   * This method shows the actual implementation structure
   * @param request - The AI message request
   * @returns Promise<AIMessageResponse> - Would return real AI response
   */
  private async getAiResponse(
    request: AIMessageRequest,
    prompt: string
  ): Promise<AIMessageResponse> {
    // Example of how to integrate with OpenAI API:
    //
    // const response = await fetch('https://api.openai.com/v1/chat/completions', {
    //   method: 'POST',
    //   headers: {
    //     'Authorization': `Bearer ${this.apiKey}`,
    //     'Content-Type': 'application/json',
    //   },
    //   body: JSON.stringify({
    //     model: this.model,
    //     messages: [
    //       {
    //         role: 'system',
    //         content: 'You are a helpful customer service assistant for a freight delivery company.'
    //       },
    //       {
    //         role: 'user',
    //         content: prompt
    //       }
    //     ],
    //     max_tokens: 200,
    //     temperature: 0.7
    //   })
    // });
    //
    // const data = await response.json();
    //
    // if (!response.ok) {
    //   throw new Error(`OpenAI API error: ${data.error?.message || 'Unknown error'}`);
    // }
    //
    // const message = data.choices[0]?.message?.content?.trim();
    //
    // if (!message) {
    //   throw new Error('No message generated by AI');
    // }
    //
    // return {
    //   message,
    //   success: true
    // };

    // For this demo return mock response
    return {
      message: this.pickMockAIResponse(request, prompt),
      success: true,
    };
  }

  /**
   * Validates the AI request
   * @param request - The AI message request to validate
   * @returns boolean - Whether the request is valid
   */
  validateRequest(request: AIMessageRequest): boolean {
    return !!(
      request.delayMinutes > 0 &&
      request.route &&
      request.route.origin &&
      request.route.destination &&
      request.trafficCondition
    );
  }

  /**
   * Picks a mocked AI response for demonstration purposes
   * @param request - The AI message request
   * @returns string - Mock AI-generated message
   */
  private pickMockAIResponse(request: AIMessageRequest, prompt: string): string {
    const { delayMinutes, route, trafficCondition } = request;

    const templates = [
      `Dear Valued Customer,

We want to inform you that your freight delivery from ${route.origin} to ${route.destination} is experiencing a delay of approximately ${delayMinutes} minutes due to ${trafficCondition} traffic conditions.

Our team is actively monitoring the situation and working to ensure your delivery arrives as soon as possible. We sincerely apologize for any inconvenience this may cause.

We appreciate your patience and understanding.

Best regards,
Freight Delivery Team`,

      `Hello,

We're writing to update you on your delivery from ${route.origin} to ${route.destination}. Due to current ${trafficCondition} traffic conditions, we're experiencing a delay of about ${delayMinutes} minutes.

Our drivers are navigating the situation carefully to ensure your freight arrives safely. We apologize for this unexpected delay and thank you for your patience.

We'll keep you updated on any further changes.

Sincerely,
Your Delivery Team`,

      `Dear Customer,

Your freight shipment from ${route.origin} to ${route.destination} is currently delayed by approximately ${delayMinutes} minutes due to ${trafficCondition} traffic conditions in the area.

Please be assured that our experienced drivers are taking the safest route possible, and we're doing everything we can to minimize the delay. We apologize for any inconvenience this may cause to your schedule.

Thank you for choosing our services.

Best regards,
Freight Operations`,
    ];

    const selectedTemplate = templates[Math.floor(Math.random() * templates.length)];

    console.log('Picked a mock AI response');
    return selectedTemplate;
  }
}
